# https://docs.github.com/en/actions/publishing-packages/publishing-docker-images#publishing-images-to-github-packages
#
name: Docker image on ghcr.io

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches: main
  schedule:
    - cron: '0 2 1 6 *'  # At 02:00 on day-of-month 1 in June (once a year actually)

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        image: ["python:3.10-slim", "nvidia/cuda:12.4.0-base-ubuntu22.04"]
        # Must match version at https://www.python.org/ftp/python/
        python: [3.10.13]

    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Sanitize docker tag
        run:
          PREFIX_DOCKER_TAG="OnnxTR-${{ matrix.image == 'nvidia/cuda:12.4.0-base-ubuntu22.04' && 'gpu' || 'cpu' }}-py${{ matrix.python }}-"
          PREFIX_DOCKER_TAG=$(echo PREFIX_DOCKER_TAG|sed 's/,/-/g')
          echo PREFIX_DOCKER_TAG=${PREFIX_DOCKER_TAG} >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: |
            # used only on schedule event
            type=schedule,pattern={{date 'YYYY-MM'}},prefix=${{ env.PREFIX_DOCKER_TAG }}
            # used only if a tag following semver is published
            type=semver,pattern={{raw}},prefix=${{ env.PREFIX_DOCKER_TAG }}

      - name: Build Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          # Set SYSTEM to 'gpu' if the image is nvidia/cuda:12.4.0-base-ubuntu22.04 and 'cpu' otherwise
          build-args: |
            BASE_IMAGE=${{ matrix.image }}
            SYSTEM=${{ matrix.image == 'nvidia/cuda:12.4.0-base-ubuntu22.04' && 'gpu' || 'cpu' }}
            PYTHON_VERSION=${{ matrix.python }}
            ONNXTR_REPO=${{ github.repository }}
            ONNXTR_VERSION=${{ github.sha }}
          push: false  # push only if `import onnxtr` works
          tags: ${{ steps.meta.outputs.tags }}

      - name: Check if `import onnxtr` works
        run: docker run ${{ steps.build.outputs.imageid }} python3 -c 'import onnxtr; print(onnxtr.__version__)'

      - name: Push Docker image
        # Push only if the CI is not triggered by "PR on main"
        if: ${{ (github.ref == 'refs/heads/main' && github.event_name != 'pull_request') || (startsWith(github.ref, 'refs/tags') && github.event_name == 'push') }}
        uses: docker/build-push-action@v6
        with:
          context: .
          # Set SYSTEM to 'gpu' if the image is nvidia/cuda:12.4.0-base-ubuntu22.04 and 'cpu' otherwise
          build-args: |
            BASE_IMAGE=${{ matrix.image }}
            SYSTEM=${{ matrix.image == 'nvidia/cuda:12.4.0-base-ubuntu22.04' && 'gpu' || 'cpu' }}
            PYTHON_VERSION=${{ matrix.python }}
            ONNXTR_REPO=${{ github.repository }}
            ONNXTR_VERSION=${{ github.sha }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}